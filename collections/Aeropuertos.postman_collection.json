{
	"info": {
		"_postman_id": "4a8ca0f7-3274-4e1c-a745-5536012da665",
		"name": "Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9248115"
	},
	"item": [
		{
			"name": "Crear aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"codigo\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"El dorado\", \r\n    \"codigo\": \"BOG\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear aeropuerto",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigo\":10,\r\n    \"nombre\": \"latam\", \r\n    \"descripcion\": \"Operador en latinoamerica\",\r\n    \"fechaFundación\": \"2017-08-22T12:00:00.000Z\",\r\n    \"paginaWeb\":\"https://latam.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/v1/airports",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\":\"10\",\r\n    \"nombre\": \"El dorado\", \r\n    \"codigo\": \"BOG\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}"
				}
			]
		},
		{
			"name": "Crear aeropuerto invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El código del aeropuerto debe ser 3\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"codigo\": \"10\",\r\n    \"nombre\": \"Nuevo\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear aeropuerto invalida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigo\":10,\r\n    \"nombre\": \"\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "obtener aeropuertos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('numero de paises > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "obtener aeropuertos",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"codigo\": \"BOG\",\n    \"nombre\": \"Aerorpuerto Internacional El dorado\", \n    \"ciudad\": \"Bogotá\",\n    \"pais\": \"Colombia\"\n    },\n    {\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"codigo\": \"CAN\",\n    \"nombre\": \"Aerorpuerto Internacional Cancún\", \n    \"ciudad\": \"Cancún\",\n    \"pais\": \"México\"\n    }\n]"
				}
			]
		},
		{
			"name": "obtener aeropuerto por codigo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/{{airportID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{airportID}}"
					]
				}
			},
			"response": [
				{
					"name": "obtener aeropuerto por codigo",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airportCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airportCode}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"codigo\": \"BOG\",\r\n    \"nombre\": \"Aerorpuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n    }"
				}
			]
		},
		{
			"name": "obtener aeropuerto que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/10",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"10"
					]
				}
			},
			"response": [
				{
					"name": "obtener aeropuerto que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/1212",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"1212"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The airport with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "actualizar aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"codigo\": \"BOG\",\r\n    \"nombre\": \"Aerorpuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports/{{airportID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{airportID}}"
					]
				}
			},
			"response": [
				{
					"name": "actualizar aeropuerto",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigo\":10,\r\n    \"nombre\": \"Aeropuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/{{airportCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airportCode}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"codigo\": \"BOG\",\r\n    \"nombre\": \"Aerorpuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n    }"
				}
			]
		},
		{
			"name": "actualizar aeropuerto que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto que actualiza no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"codigo\": \"BOG\",\r\n    \"nombre\": \"Aerorpuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports/10",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"10"
					]
				}
			},
			"response": [
				{
					"name": "actualizar aeropuerto que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codigo\":10,\r\n    \"nombre\": \"Aeropuerto Internacional El dorado\", \r\n    \"ciudad\": \"Bogotá\",\r\n    \"pais\": \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/1414",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"1414"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The airport with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "borrar aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "borrar aeropuerto",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineCode}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "borrar aeropuerto que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto que borra no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "borrar aeropuerto que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/1414",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"1414"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "airlineID",
			"value": "1\n",
			"type": "string"
		},
		{
			"key": "airportID",
			"value": "1",
			"type": "string"
		}
	]
}